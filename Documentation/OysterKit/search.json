{"Typealiases.html#/s:9OysterKit13StreamedTokena":{"name":"StreamedToken","abstract":"<p>The elements generated during streaming. These are very light-weight and are the same"},"Typealiases.html#/s:9OysterKit4Testa":{"name":"Test","abstract":"<p>A matching closure should perform the test using the lexer, create any nodes it wishes"},"Typealiases.html#/s:9OysterKit17CustomRuleClosurea":{"name":"CustomRuleClosure","abstract":"<p>A closure that captures all the required behaviour for rule evaluation (but not the parser logic surrounding it. If the rule"},"Typealiases.html#/s:9OysterKit15RuleAnnotationsa":{"name":"RuleAnnotations","abstract":"<p>A dictionary of annotations and their values</p>"},"Structs/LabelledToken.html#/s:9OysterKit13LabelledTokenV8rawValueSivp":{"name":"rawValue","abstract":"<p>The <code>Int</code> identifier of the Token. It is automatically generated</p>","parent_name":"LabelledToken"},"Structs/LabelledToken.html#/s:9OysterKit13LabelledTokenV9withLabelACSS_tcfc":{"name":"init(withLabel:)","abstract":"<p>Create a new token instance</p>","parent_name":"LabelledToken"},"Structs/LabelledToken.html#/s:9OysterKit13LabelledTokenV11descriptionSSvp":{"name":"description","abstract":"<p>A human readable representation of the token</p>","parent_name":"LabelledToken"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityV14minimumMatchesSivp":{"name":"minimumMatches","abstract":"<p>The minimum number of matches, must be &gt;= 0</p>","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityV14maximumMatchesSiSgvp":{"name":"maximumMatches","abstract":"<p>The maximum number of matches. If nil, any number can be matched</p>","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityVyACs16PartialRangeFromVySiGcfc":{"name":"init(_:)","abstract":"<p>Creates a new range from the supplied partial range meaning that the number","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityVyACSNySiGcfc":{"name":"init(_:)","abstract":"<p>Creates a new range from the supplied closed range meaning that the number","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityV3oneACvpZ":{"name":"one","abstract":"<p>A pre-specified constant for one and exactly one matches</p>","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityV10optionallyACvpZ":{"name":"optionally","abstract":"<p>A pre-specified constant for optional matches (between 0 and 1 matches)</p>","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityV10noneOrMoreACvpZ":{"name":"noneOrMore","abstract":"<p>A pre-specified constant for optional but unbound matches (between 0 and infinity matches)</p>","parent_name":"Cardinality"},"Structs/Cardinality.html#/s:9OysterKit11CardinalityV9oneOrMoreACvpZ":{"name":"oneOrMore","abstract":"<p>A pre-specified constant for required but unbound matches (between 1 and infinity matches)</p>","parent_name":"Cardinality"},"Structs/Behaviour/Kind.html#/s:9OysterKit9BehaviourV4KindO8skippingyA2EmF":{"name":"skipping","abstract":"<p>Do not include any matches in the bounds of the match</p>","parent_name":"Kind"},"Structs/Behaviour/Kind.html#/s:9OysterKit9BehaviourV4KindO8scanningyA2EmF":{"name":"scanning","abstract":"<p>Do not create structure but do include in the bounds of the match</p>","parent_name":"Kind"},"Structs/Behaviour/Kind.html#/s:9OysterKit9BehaviourV4KindO10structuralyAeA5Token_p_tcAEmF":{"name":"structural(token:)","abstract":"<p>Include in the bounds of the match and create a structural node in the AST</p>","parent_name":"Kind"},"Structs/Behaviour/Kind.html":{"name":"Kind","abstract":"<p>Captures scanning/parsing behaviour indicating identifying if the rule should create tokens","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV9lookaheadSbvp":{"name":"lookahead","abstract":"<p>The rule should be matched, but if lookahead is true the scanner head position should be","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV6negateSbvp":{"name":"negate","abstract":"<p>The result of matching should be negated.</p>","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV4kindAC4KindOvp":{"name":"kind","abstract":"<p>The kind of rule, skipping, scanning, or structural (see above)</p>","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV11cardinalityAA11CardinalityVvp":{"name":"cardinality","abstract":"<p>The cardinatlity of the matches</p>","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV_11cardinality7negated9lookaheadA2C4KindO_SNySiGS2btcfc":{"name":"init(_:cardinality:negated:lookahead:)","abstract":"<p>Constructs a new instance of the struct with the specified parameters. All except kind can be excluded resulting","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV_11cardinality7negated9lookaheadA2C4KindO_s16PartialRangeFromVySiGS2btcfc":{"name":"init(_:cardinality:negated:lookahead:)","abstract":"<p>Constructs a new instance of the struct with the specified parameters. All except kind can be excluded resulting","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV12instanceWith_11cardinality7negated9lookaheadA2C4KindOSg_SNySiGSgSbSgAMtF":{"name":"instanceWith(_:cardinality:negated:lookahead:)","abstract":"<p>Creates a new instance with the specified parameters changed. All have defaults and any that are excluded will maintain their current","parent_name":"Behaviour"},"Structs/Behaviour.html#/s:9OysterKit9BehaviourV12instanceWith_11cardinality7negated9lookaheadA2C4KindOSg_s16PartialRangeFromVySiGSgSbSgAOtF":{"name":"instanceWith(_:cardinality:negated:lookahead:)","abstract":"<p>Creates a new instance with the specified parameters changed. All have defaults and any that are excluded will maintain their current","parent_name":"Behaviour"},"Structs/ParsingDecoder.html#/s:9OysterKit14ParsingDecoderVACycfc":{"name":"init()","abstract":"<p>Create an instance of <code>ParsingDecoder</code></p>","parent_name":"ParsingDecoder"},"Structs/ParsingDecoder.html#/s:9OysterKit14ParsingDecoderV6decode_5usingxxm_AA28DecodeableAbstractSyntaxTree_ptKSeRzlF":{"name":"decode(_:using:)","abstract":"<p>Decodes the supplied data using the supplied parser into the specified object. The names of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Token.html\">Token</a></code>s generated by the","parent_name":"ParsingDecoder"},"Structs/ParsingDecoder.html#/s:9OysterKit14ParsingDecoderV6decode_4from5usingxxm_SSAA8Language_ptKSeRzlF":{"name":"decode(_:from:using:)","abstract":"<p>Decodes the supplied data using the supplied parser into the specified object. The names of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Token.html\">Token</a></code>s generated by the","parent_name":"ParsingDecoder"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV4with4fromAcA014AbstractSyntaxD11ConstructorC30IntermediateRepresentationNodeV_SStKcfc":{"name":"init(with:from:)","abstract":"<p>Creates a new instance using the supplied intermediate representation and source</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV4with8matching8children11annotationsAcA5Token_p_SSSayACGSDyAA14RuleAnnotationOAA0jK5ValueOGtcfc":{"name":"init(with:matching:children:annotations:)","abstract":"<p>Creates a new instance of the node using the supplied parameters. You do not normally need to call this as nodes","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV5tokenAA5Token_pvp":{"name":"token","abstract":"<p>The captured <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Token.html\">Token</a></code></p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV13matchedStringSSvp":{"name":"matchedString","abstract":"<p>The <code>String</code> that was matched to satisfy the rules for the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV5tokenAA5Token_pvp\">token</a></code>.</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV8childrenSayACGvp":{"name":"children","abstract":"<p>Any sub-nodes in the tree</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV11annotationsSDyAA14RuleAnnotationOAA0fG5ValueOGvp":{"name":"annotations","abstract":"<p>Any associated annotations made on the node</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeVyACSgSScip":{"name":"subscript(_:)","abstract":"<p>Access a child based on the name of the token of the child</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeVyACSicip":{"name":"subscript(_:)","abstract":"<p>Access a child based on the index of the child</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV11descriptionSSvp":{"name":"description","abstract":"<p>A well formatted description of this branch of the tree</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV11stringValueSSvp":{"name":"stringValue","abstract":"<p>The string that was captured by this node</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV3keys9CodingKey_pvp":{"name":"key","abstract":"<p>The <code>CodingKey</code> for this node. This is normally generated using the name of the","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html#/s:9OysterKit14HomogenousTreeV8contentsSayAA024DecodeableAbstractSyntaxD0_pGvp":{"name":"contents","abstract":"<p>The children of this node</p>","parent_name":"HomogenousTree"},"Structs/HomogenousTree.html":{"name":"HomogenousTree","abstract":"<p>HomogenousTree is used as the default form of AbstractSyntaxTree. Each node in the tree captures its <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Token.html\">Token</a></code>, the <code>String</code> it mtached, and any children.</p>"},"Structs/ParsingDecoder.html":{"name":"ParsingDecoder","abstract":"<p>A standard decoder that can use any supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Parser.html\">Parser</a></code> to decode <code>Data</code> into a <code>Decodable</code> conforming type.</p>"},"Structs/Behaviour.html":{"name":"Behaviour","abstract":"<p><code>Behaviour</code> represents a complete description of the required behaviour of any given"},"Structs/Cardinality.html":{"name":"Cardinality","abstract":"<p>Represents the cardinality of a rule. It can be specified as a closed range,"},"Structs/LabelledToken.html":{"name":"LabelledToken","abstract":"<p>A generic <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Token.html\">Token</a></code> implementation that is labelled (has an associated `<code>String</code>). The value is automatically generated</p>"},"Protocols/Rule.html#/s:9OysterKit4RuleP5match4with3forAA11MatchResultOAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"match(with:for:)","abstract":"<p>Should perform the actual check and manage the communicaion with the supplied <code>IntermedidateRepresentation</code>. If the match fails, and that failure cannot","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RuleP8producesAA5Token_pvp":{"name":"produces","abstract":"<p>The token produced by this rule</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RuleP11annotationsSDyAA0C10AnnotationOAA0cE5ValueOGvp":{"name":"annotations","abstract":"<p>The annotations on this rule</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePyAA0C15AnnotationValueOSgAA0cD0Ocip":{"name":"subscript(_:)","abstract":"<p>Returns the value of the specific <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RuleAnnotationValue.html\">RuleAnnotationValue</a></code> identified by <code>annotation</code> if present</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RuleP8instance4with14andAnnotationsAaB_pAA5Token_pSg_SDyAA0C10AnnotationOAA0cI5ValueOGSgtF":{"name":"instance(with:andAnnotations:)","abstract":"<p>Create a new instance of the rule with the supplied annotations and token but otherwise exactly the same</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE8instance4withAaB_pAA5Token_p_tF":{"name":"instance(with:)","abstract":"<p>Creates a new instance of the rule changing the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Token.html\">Token</a></code> produced</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE8instance4withAaB_pSDyAA0C10AnnotationOAA0cF5ValueOG_tF":{"name":"instance(with:)","abstract":"<p>Creates a new instance of the rule changing the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit15RuleAnnotationsa\">RuleAnnotations</a></code> associated with the rule</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE5errorSSSgvp":{"name":"error","abstract":"<p>The user specified (in an annotation) error associated with the rule</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE4voidSbvp":{"name":"void","abstract":"<p>Is this rule marked as void?</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE9transientSbvp":{"name":"transient","abstract":"<p>Is this rule marked as transient</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE7consume11annotationsAaB_pSDyAA0C10AnnotationOAA0cF5ValueOGSg_tF":{"name":"consume(annotations:)","abstract":"<p>Creates a new rule which is the same as this rule except that it consumes rather than generating tokens</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE9lookahead11annotationsAaB_pSDyAA0C10AnnotationOAA0cF5ValueOGSg_tF":{"name":"lookahead(annotations:)","abstract":"<p>Create a new rule wrapping the supplied rule which looks ahead rather than directly applying the rule</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE8optional11annotationsAaB_pSDyAA0C10AnnotationOAA0cF5ValueOGSg_tF":{"name":"optional(annotations:)","abstract":"<p>Creates a new rule making this rule optional</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE3not11annotationsAaB_pSDyAA0C10AnnotationOAA0cF5ValueOGSg_tF":{"name":"not(annotations:)","abstract":"<p>Creates a new rule making this rule logical inverse (that is, everything that didn&rsquo;t match it now does and vice versa)(</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE3not9producing11annotationsAaB_pAA5Token_p_SDyAA0C10AnnotationOAA0cH5ValueOGSgtF":{"name":"not(producing:annotations:)","abstract":"<p>Creates a new rule making this rule logical inverse (that is, everything that didn&rsquo;t match it now does and vice versa) and changing the token that is produced by the rule</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE8repeated3min5limit9producing11annotationsAaB_pSi_SiSgAA5Token_pSgSDyAA0C10AnnotationOAA0cJ5ValueOGSgtF":{"name":"repeated(min:limit:producing:annotations:)","abstract":"<p>Creates a new rule wrapping this rule and requiring that it is repeated as specified</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit4RulePAAE8optional9producing11annotationsAaB_pAA5Token_p_SDyAA0C10AnnotationOAA0cH5ValueOGSgtF":{"name":"optional(producing:annotations:)","abstract":"<p>Creates a new rule wrapping this rule making it optional</p>","parent_name":"Rule"},"Protocols/Token.html#/s:9OysterKit5TokenP8rawValueSivp":{"name":"rawValue","abstract":"<p>A rawValue that unless the token is transient should be unique</p>","parent_name":"Token"},"Protocols/Token.html#/s:9OysterKit5TokenPAAE09transientC0AaB_pvpZ":{"name":"transientToken","abstract":"<p>A transient token</p>","parent_name":"Token"},"Protocols/Token.html#/s:9OysterKit5TokenPAAE4from5oneOfAA4Rule_p10Foundation12CharacterSetV_tF":{"name":"from(oneOf:)","abstract":"<p>Create a rule that creates the <code>Token</code> when on of the characters in the supplied set is found</p>","parent_name":"Token"},"Protocols/Token.html#/s:9OysterKit5TokenPAAE7consumeyAA4Rule_p10Foundation12CharacterSetVF":{"name":"consume(_:)","abstract":"<p>Create a rule that will consume one of the characters in the supplied set is found. No token will be issued.</p>","parent_name":"Token"},"Protocols/Token.html#/s:9OysterKit5TokenPAAE15consumeGreedilyyAA4Rule_p10Foundation12CharacterSetVF":{"name":"consumeGreedily(_:)","abstract":"<p>Create a rule that will consume as many of the characters in the supplied set as possible. No token will be issued.</p>","parent_name":"Token"},"Protocols/Token.html#/s:9OysterKit5TokenPAAE9oneOrMore2ofAA4Rule_p10Foundation12CharacterSetV_tF":{"name":"oneOrMore(of:)","abstract":"<p>Create a rule that creates the <code>Token</code> when one or more of the characters in the supplied set is found</p>","parent_name":"Token"},"Protocols/Token.html#/s:9OysterKit5TokenPAAE9transientSbvp":{"name":"transient","abstract":"<p>True if the token is transient</p>","parent_name":"Token"},"Protocols/Rule.html#/s:9OysterKit15RuleP9behaviourAA9BehaviourVvp":{"name":"behaviour","abstract":"<p>The behaviour for the rule controlling things like cardinality and lookahead</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RuleP11annotationsSDyAA0D10AnnotationOAA0dF5ValueOGvp":{"name":"annotations","abstract":"<p>The annotations on the rule</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RuleP4test4with3foryAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"test(with:for:)","abstract":"<p>This function implements the actual test. It is responsible soley for performing","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RuleP12instanceWith9behaviour11annotationsxAA9BehaviourVSg_SDyAA0D10AnnotationOAA0dJ5ValueOGSgtF":{"name":"instanceWith(behaviour:annotations:)","abstract":"<p>This function should create a new instance of this rule, replacing the behaviour and","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RulePAAE8producesAA5Token_pvp":{"name":"produces","abstract":"<p>The token that the rule produces if structural. For backwards compatibility","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RulePAAE10structuralSbvp":{"name":"structural","abstract":"<p><code>true</code> if the rule creates ndoes, false otherwise</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RulePAAE5errorSSSgvp":{"name":"error","abstract":"<p>The user specified (in an annotation) error associated with the rule</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RulePAAE12instanceWith4withxAA9BehaviourV_tF":{"name":"instanceWith(with:)","abstract":"<p>Creates a new instance of the rule with the specified behaviour but","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RulePAAE12instanceWith11annotationsxSDyAA0D10AnnotationOAA0dH5ValueOG_tF":{"name":"instanceWith(annotations:)","abstract":"<p>Creates a new instance of the rule with the specified annotations but","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RulePAAE8instance4with14andAnnotationsAA0D0_pAA5Token_pSg_SDyAA0D10AnnotationOAA0dJ5ValueOGSgtF":{"name":"instance(with:andAnnotations:)","abstract":"<p>Create a new instance of the rule with the supplied annotations and token but otherwise exactly the same</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RulePAAE12newBehaviour_7negated9lookaheadxAA0F0V4KindOSg_SbSgALtF":{"name":"newBehaviour(_:negated:lookahead:)","abstract":"<p>Creates a new instance of the rule with the specified behavioural attributes","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RulePAAE12newBehaviour_11cardinality7negated9lookaheadxAA0F0V4KindOSg_SNySiGSbSgANtF":{"name":"newBehaviour(_:cardinality:negated:lookahead:)","abstract":"<p>Creates a new instance of the rule with the specified behavioural attributes","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RulePAAE12newBehaviour_11cardinality7negated9lookaheadxAA0F0V4KindOSg_s16PartialRangeFromVySiGSbSgAPtF":{"name":"newBehaviour(_:cardinality:negated:lookahead:)","abstract":"<p>Creates a new instance of the rule with the specified behavioural attributes","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RulePAAE5match4with3forAA11MatchResultOAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"match(with:for:)","abstract":"<p>Standard implementation that uses the evaluate function to apply the behaviour of the rule.</p>","parent_name":"Rule"},"Protocols/Rule.html#/s:9OysterKit15RulePAAE8evaluate_5using3andAA11MatchResultOyAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKXE_AaI_pAaJ_ptKF":{"name":"evaluate(_:using:and:)","abstract":"<p>Standard implementation that applies the behaviour of the rule.</p>","parent_name":"Rule"},"Protocols/Language.html#/s:9OysterKit8LanguageP7grammarSayAA4Rule_pGvp":{"name":"grammar","abstract":"<p>The rules in the <code>Language</code>&lsquo;s grammar</p>","parent_name":"Language"},"Protocols/HumanConsumableError.html#/s:9OysterKit20HumanConsumableErrorP7messageSSvp":{"name":"message","abstract":"<p>The human readable message</p>","parent_name":"HumanConsumableError"},"Protocols/HumanConsumableError.html#/s:9OysterKit20HumanConsumableErrorP5rangeSnySS5IndexVGvp":{"name":"range","abstract":"<p>The range in the source scalars that the error was generated against</p>","parent_name":"HumanConsumableError"},"Protocols/HumanConsumableError.html#/s:9OysterKit20HumanConsumableErrorPAAE09formattedE7Message2inS2S_tF":{"name":"formattedErrorMessage(in:)","abstract":"<p>Provides a formatted version of the error message suitable for printing in a fixed width font, with a pointer highlighting the","parent_name":"HumanConsumableError"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationPxycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"IntermediateRepresentation"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationP12willEvaluate4rule2atAA11MatchResultOSgAA4Rule_p_SS5IndexVtF":{"name":"willEvaluate(rule:at:)","abstract":"<p>Called when the parser is about to evaluate a rule. This is an oppertunity to prepare any appropriate data structures.","parent_name":"IntermediateRepresentation"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationP12willEvaluate5token2atAA11MatchResultOSgAA5Token_p_SS5IndexVtF":{"name":"willEvaluate(token:at:)","abstract":"<p>Called when the parser is about to evaluate a structural rule. This is an oppertunity to prepare any appropriate data structures.","parent_name":"IntermediateRepresentation"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationP11didEvaluate5token11annotations11matchResultyAA5Token_p_SDyAA14RuleAnnotationOAA0lM5ValueOGAA05MatchJ0OtF":{"name":"didEvaluate(token:annotations:matchResult:)","abstract":"<p>Called after a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rule.html\">Rule</a></code> has been evaluated allowing the AST to make appropriate changes to its structure, or perhaps cache the result","parent_name":"IntermediateRepresentation"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationP11didEvaluate4rule11matchResultyAA4Rule_p_AA05MatchI0OtF":{"name":"didEvaluate(rule:matchResult:)","abstract":"<p>Called after a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rule.html\">Rule</a></code> has been evaluated allowing the AST to make appropriate changes to its structure, or perhaps cache the result","parent_name":"IntermediateRepresentation"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationP13willBuildFrom6source4withySS_AA8Language_ptF":{"name":"willBuildFrom(source:with:)","abstract":"<p>Called when the parser starts evaluation providing an oppertunity for the AST to prepare it&rsquo;s internal state.</p>","parent_name":"IntermediateRepresentation"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationP8didBuildyyF":{"name":"didBuild()","abstract":"<p>Called when parsing of the source is complete.</p>","parent_name":"IntermediateRepresentation"},"Protocols/IntermediateRepresentation.html#/s:9OysterKit26IntermediateRepresentationP10resetStateyyF":{"name":"resetState()","abstract":"<p>Called if the state of parsing should be completely reset</p>","parent_name":"IntermediateRepresentation"},"Protocols/Node.html#/s:9OysterKit4NodeP5tokenAA5Token_pvp":{"name":"token","abstract":"<p>The token representing the match</p>","parent_name":"Node"},"Protocols/Node.html#/s:9OysterKit4NodeP5rangeSnySS5IndexVGvp":{"name":"range","abstract":"<p>The range of the match in the original source</p>","parent_name":"Node"},"Protocols/Node.html#/s:9OysterKit4NodeP11annotationsSDyAA14RuleAnnotationOAA0eF5ValueOGvp":{"name":"annotations","abstract":"<p>Annotations that were made on the token</p>","parent_name":"Node"},"Protocols/Node.html#/s:9OysterKit4NodeP8childrenSayxGvp":{"name":"children","abstract":"<p>Any sub-nodes in the tree</p>","parent_name":"Node"},"Protocols/Node.html#/s:9OysterKit4NodeP3for2at11annotationsxAA5Token_p_SnySS5IndexVGSDyAA14RuleAnnotationOAA0iJ5ValueOGtcfc":{"name":"init(for:at:annotations:)","abstract":"<p>Create a new instance of the node</p>","parent_name":"Node"},"Protocols/Node.html#/s:9OysterKit4NodePAAE11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the <code>Node</code></p>","parent_name":"Node"},"Protocols/AbstractSyntaxTree.html#/s:9OysterKit18AbstractSyntaxTreeP4with4fromxAA0cdE11ConstructorC30IntermediateRepresentationNodeV_SStKcfc":{"name":"init(with:from:)","abstract":"<p>Create a new instance of the object using the supplied node</p>","parent_name":"AbstractSyntaxTree"},"Protocols/LexicalContext.html#/s:9OysterKit14LexicalContextP5rangeSnySS5IndexVGvp":{"name":"range","abstract":"<p>The range from the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP4markyyF\">LexicalAnalyzer.mark()</a></code> to the point at which <code>LexicalAnalyzer.proceed()-&gt;LexicalContext</code> was called</p>","parent_name":"LexicalContext"},"Protocols/LexicalContext.html#/s:9OysterKit14LexicalContextP6sourceSSvp":{"name":"source","abstract":"<p>The string being scanned</p>","parent_name":"LexicalContext"},"Protocols/LexicalContext.html#/s:9OysterKit14LexicalContextP13matchedStringSSvp":{"name":"matchedString","abstract":"<p>The substring that was matched and is catpured by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalContext.html#/s:9OysterKit14LexicalContextP5rangeSnySS5IndexVGvp\">range</a></code></p>","parent_name":"LexicalContext"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP6sourcexSS_tcfc":{"name":"init(source:)","abstract":"<p>Creates a new instance of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Lexer.html\">Lexer</a></code> for the supplied <code>String</code>.</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP7currentSSvp":{"name":"current","abstract":"<p>The character currently being evaluated</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP5depthSivp":{"name":"depth","abstract":"<p>The depth of the look-ahead stack</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP4markyyF":{"name":"mark()","abstract":"<p>: Marks the current position. This must be followed by a matching rewind() or proceed()</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP6rewindyyF":{"name":"rewind()","abstract":"<p>: Discards the current mark, rewinding the scanner to that position</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP7proceedAA0C7Context_pyF":{"name":"proceed()","abstract":"<p>: Discards the current mark, but leaving the scanner at it&rsquo;s current location</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP10endOfInputSbvp":{"name":"endOfInput","abstract":"<p>Should return <code>true</code> if the end of the source <code>String</code> has been reached</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP4scan8terminalySS_tKF":{"name":"scan(terminal:)","abstract":"<p>Scan until the specified terminal is reached in the source <code>String</code>. If the end of the <code>String</code> is reached before","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP4scan5oneOfy10Foundation12CharacterSetV_tKF":{"name":"scan(oneOf:)","abstract":"<p>Scan until one of the characters in the supplied <code>CharacterSet</code> is found. If the end of the source is reached before a","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP4scan17regularExpressionySo09NSRegularG0C_tKF":{"name":"scan(regularExpression:)","abstract":"<p>Scan the supplied regular expression (<code>NSRegularExpression</code>). If not found an <code>Error</code> should be the thrown. The scanner","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP8scanUpTo8terminalySS_tKF":{"name":"scanUpTo(terminal:)","abstract":"<p>Scan up to (that is, the position of the scanner should be at the start of the match, not after it) the supplied <code>String</code>. If the terminal is not found","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP8scanUpTo5oneOfy10Foundation12CharacterSetV_tKF":{"name":"scanUpTo(oneOf:)","abstract":"<p>Scan up to one of the characters in the supplied <code>CharacterSet</code> is found. If the end of the source is reached before a","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP8scanNextyyKF":{"name":"scanNext()","abstract":"<p>Advances the scanner one character. If the end of the source <code>String</code> has already been reached a <code>Error</code> should be thrown.</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerPySSSnySS5IndexVGcip":{"name":"subscript(_:)","abstract":"<p>Should return the <code>String</code> from the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP6sourceSSvp\">source</a></code> representing the supplied range.</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP6sourceSSvp":{"name":"source","abstract":"<p>Should return the <code>String</code> being analyzed</p>","parent_name":"LexicalAnalyzer"},"Protocols/LexicalAnalyzer.html#/s:9OysterKit15LexicalAnalyzerP8positionSivp":{"name":"position","abstract":"<p>Should return the integer offset of the current scanning position in charactes</p>","parent_name":"LexicalAnalyzer"},"Protocols/DecodeableAbstractSyntaxTree.html#/s:9OysterKit28DecodeableAbstractSyntaxTreeP11stringValueSSvp":{"name":"stringValue","abstract":"<p>The String the was matched for the node</p>","parent_name":"DecodeableAbstractSyntaxTree"},"Protocols/DecodeableAbstractSyntaxTree.html#/s:9OysterKit28DecodeableAbstractSyntaxTreeP3keys9CodingKey_pvp":{"name":"key","abstract":"<p>Should be the <code>CodingKey</code> for this node. This is normally generated using the name of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Token.html\">Token</a></code>.</p>","parent_name":"DecodeableAbstractSyntaxTree"},"Protocols/DecodeableAbstractSyntaxTree.html#/s:9OysterKit28DecodeableAbstractSyntaxTreeP8contentsSayAaB_pGvp":{"name":"contents","abstract":"<p>Should be the children of this node</p>","parent_name":"DecodeableAbstractSyntaxTree"},"Protocols/DecodeableAbstractSyntaxTree.html#/s:9OysterKit28DecodeableAbstractSyntaxTreePyAaB_pSicip":{"name":"subscript(_:)","abstract":"<p>Should return the child node at the supplied <code>index</code>. A default implementation is provided through an extension.</p>","parent_name":"DecodeableAbstractSyntaxTree"},"Protocols/DecodeableAbstractSyntaxTree.html#/s:9OysterKit28DecodeableAbstractSyntaxTreeP3keyAaB_pSgs9CodingKey_p_tcip":{"name":"subscript(key:)","abstract":"<p>Should return the child node with the specified <code>CodingKey</code> or <code>nil</code> if it does not exist. A default implementation","parent_name":"DecodeableAbstractSyntaxTree"},"Protocols/DecodeableAbstractSyntaxTree.html#/s:9OysterKit28DecodeableAbstractSyntaxTreePyAaB_pSgSScip":{"name":"subscript(_:)","abstract":"<p>Should return the child node with the specified <code>String</code> as a key or <code>nil</code> if it does not exist. A default implementation","parent_name":"DecodeableAbstractSyntaxTree"},"Protocols/DecodeableAbstractSyntaxTree.html":{"name":"DecodeableAbstractSyntaxTree","abstract":"<p>This protocol identifies as set of additional requirements for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code>s in order for them to be used for decoding.  Some elements of the implementation are"},"Protocols/LexicalAnalyzer.html":{"name":"LexicalAnalyzer","abstract":"<p>The job of an implementation of this protocol is two fold</p>"},"Protocols/LexicalContext.html":{"name":"LexicalContext","abstract":"<p>A lexical context summarises the of a <code>String</code> being scanned by a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalAnalyzer.html\">LexicalAnalyzer</a></code> between two marks. It is generated when the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalAnalyzer.html\">LexicalAnalyzer</a></code> is advanced"},"Protocols/AbstractSyntaxTree.html":{"name":"AbstractSyntaxTree","abstract":"<p>Abstract Syntax Trees are responsible to for taking an IntermediateRepresentation and building a data structure suitable for semantic analysis</p>"},"Protocols/Node.html":{"name":"Node","abstract":"<p>Nodes are the basic elements of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IntermediateRepresentation.html\">IntermediateRepresentation</a></code>s. They record a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Token.html\">Token</a></code>, the range of the <code>String</code>&lsquo;s <code>UnicodeScalarView</code> the match occured in"},"Protocols/IntermediateRepresentation.html":{"name":"IntermediateRepresentation","abstract":"<p>An <code>IntermediateRepresentation</code> is responsible for building this structure, typically some kind of Abstract Syntax Tree (AST)."},"Protocols/HumanConsumableError.html":{"name":"HumanConsumableError","abstract":"<p>To be implemented by any error that is expected to be meaningful to a user looking at parsing results</p>"},"Protocols/Language.html":{"name":"Language","abstract":"<p>A language stores a set of grammar rules that can be used to parse <code>String</code>s. Extensions provide additional methods (such as parsing) that operate on these rules.</p>"},"Protocols/Rule.html":{"name":"Rule","abstract":"<p>Behavioural rule is both an extension to and ultimately a replacement for current"},"Protocols/Token.html":{"name":"Token","abstract":"<p><code>Token</code>s are generated when rules are matched (usually, sometime a rule just advances the scan-head). Tokens with a <code>rawValue</code> of -1 are considered transient, meaning that they should not be included in any construction of an AST. However, they may provide context to the AST.</p>"},"Protocols/Rule.html":{"name":"Rule","abstract":"<p>The protocol that parsing and scanning rules must adhere to. There is no need to fully implement this protocol unless you are looking for bespoke <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalAnalyzer.html\">LexicalAnalyzer</a></code> or <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IntermediateRepresentation.html\">IntermediateRepresentation</a></code> control. It is recommended to use <code>ParserRule.custom</code> in almost all cases.</p>"},"Functions.html#/s:9OysterKit8areEqual3lhs3rhsSbSDyAA14RuleAnnotationOAA0gH5ValueOG_AItF":{"name":"areEqual(lhs:rhs:)","abstract":"<p>Compares two <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit15RuleAnnotationsa\">RuleAnnotations</a></code></p>"},"Functions.html#/s:9OysterKit2eeoiySbAA5Token_p_AaC_ptF":{"name":"==(_:_:)","abstract":"<p>Compares two tokens for equality</p>"},"Extensions/Int.html#/s:Si9OysterKitE8rawValueSivp":{"name":"rawValue","abstract":"<p>Itself</p>","parent_name":"Int"},"Extensions/Collection.html#/s:Sl9OysterKitAA4Node7ElementRpzrlE13combinedRangeSnySS5IndexVGvp":{"name":"combinedRange","abstract":"<p>Returns the combined range of all <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code>s in the <code>Collection</code> essentially setting the <code>lowerBound</code> to the lowest of all range, and upperBound to the highest of all ranges.</p>","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl9OysterKitAA29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV7ElementRtzrlE9perpetualSayAEGvp":{"name":"perpetual","abstract":"<p>Returns a new <code>Collection</code> with any transient nodes filtered out</p>","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl9OysterKitAA14RuleAnnotationO3key_AA0cD5ValueO5valuet7ElementRtzrlE5merge4withSDyAcFGAL_tF":{"name":"merge(with:)","abstract":"<p>Creates a new collection of RuleAnnotations where the merged annotations override those in","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl9OysterKitAA14RuleAnnotationO3key_AA0cD5ValueO5valuet7ElementRtzrlE15stlrDescriptionSSvp":{"name":"stlrDescription","abstract":"<p>A description in STLR format of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit15RuleAnnotationsa\">RuleAnnotations</a></code></p>","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl9OysterKitAA4Rule_p7ElementRtzrlE8sequence5token11annotationsAaB_pAA5Token_p_SDyAA0C10AnnotationOAA0cI5ValueOGSgtF":{"name":"sequence(token:annotations:)","abstract":"<p>Creates a new rule that requires that all rules in this array are found one after another.</p>","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl9OysterKitAA4Rule_p7ElementRtzrlE5oneOf5token11annotationsAaB_pAA5Token_p_SDyAA0C10AnnotationOAA0cJ5ValueOGSgtF":{"name":"oneOf(token:annotations:)","abstract":"<p>Creates a new rule that requires one of all the rules in this array must be matched.</p>","parent_name":"Collection"},"Extensions/Array.html#/s:Sa9OysterKitAA4Rule_pRszlE8languageAA8Language_pvp":{"name":"language","abstract":"<p>The language for the <code>[Rule]</code></p>","parent_name":"Array"},"Extensions/CharacterSet.html#/s:10Foundation12CharacterSetV9OysterKitE5until5token11annotationsAD4Rule_pAD5Token_p_SDyAD0I10AnnotationOAD0iK5ValueOGSgtF":{"name":"until(token:annotations:)","abstract":"<p>Undocumented</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:10Foundation12CharacterSetV9OysterKitE8terminal5token11annotationsAD4Rule_pAD5Token_p_SDyAD0I10AnnotationOAD0iK5ValueOGSgtF":{"name":"terminal(token:annotations:)","abstract":"<p>Undocumented</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:10Foundation12CharacterSetV9OysterKitE7consume8greedily11annotationsAD4Rule_pSb_SDyAD0I10AnnotationOAD0iJ5ValueOGSgtF":{"name":"consume(greedily:annotations:)","abstract":"<p>Undocumented</p>","parent_name":"CharacterSet"},"Extensions/String.html#/s:SS9OysterKitE5until5token11annotationsAA4Rule_pAA5Token_p_SDyAA0F10AnnotationOAA0fH5ValueOGSgtF":{"name":"until(token:annotations:)","abstract":"<p>Undocumented</p>","parent_name":"String"},"Extensions/String.html#/s:SS9OysterKitE8terminal5token11annotationsAA4Rule_pAA5Token_p_SDyAA0F10AnnotationOAA0fH5ValueOGSgtF":{"name":"terminal(token:annotations:)","abstract":"<p>Undocumented</p>","parent_name":"String"},"Extensions/String.html#/s:SS9OysterKitE7consume11annotationsAA4Rule_pSDyAA0E10AnnotationOAA0eF5ValueOGSg_tF":{"name":"consume(annotations:)","abstract":"<p>Undocumented</p>","parent_name":"String"},"Extensions/String.html#/s:SS9OysterKitE8rawValueSivp":{"name":"rawValue","abstract":"<p>Returns the <code>hash</code> of the <code>String</code></p>","parent_name":"String"},"Extensions/_ParsingDecoder.html#/s:s28SingleValueDecodingContainerP6decodeyqd__qd__mKSeRd__lF":{"name":"decode(_:)","parent_name":"_ParsingDecoder"},"Extensions/Decodable.html#/s:Se9OysterKitE6decode_5usingxSS_AA8Language_ptKFZ":{"name":"decode(_:using:)","abstract":"<p>Creates a new instance of the <code>Decodeable</code> using the supplied source and language.</p>","parent_name":"Decodable"},"Extensions/Decodable.html#/s:Se9OysterKitE6decode_4with5usingxSS_qd__mAA8Language_ptKAA28DecodeableAbstractSyntaxTreeRd__lFZ":{"name":"decode(_:with:using:)","abstract":"<p>Creates a new instance of the <code>Decodeable</code> using the supplied source and language. You typically do not need to use this","parent_name":"Decodable"},"Extensions/Decodable.html":{"name":"Decodable","abstract":"<p>Makes it possible for any <code>Decodable</code> to be constructed using a source string and language. You can specify your own"},"Extensions/_ParsingDecoder.html":{"name":"_ParsingDecoder","abstract":"<p>Undocumented</p>"},"Extensions/String.html":{"name":"String"},"Extensions/CharacterSet.html":{"name":"CharacterSet"},"Extensions/Array.html":{"name":"Array","abstract":"<p>Extensions to an array where the elements are <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rule.html\">Rule</a></code>s</p>"},"Extensions/Collection.html":{"name":"Collection","abstract":"<p>An extension to make it easy to operate on any collection of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code>s</p>"},"Extensions/Int.html":{"name":"Int","abstract":"<p>An extension to allow any <code>Int</code> to be used as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Token.html\">Token</a></code>.</p>"},"Enums/ScannerRule.html#/s:9OysterKit11ScannerRuleO5oneOfyAcA5Token_p_SaySSGSDyAA0D10AnnotationOAA0dH5ValueOGtcACmF":{"name":"oneOf(token:_:_:)","abstract":"<p>Produces the specified token when one of the <code>String</code>s in the array is found</p>","parent_name":"ScannerRule"},"Enums/ScannerRule.html#/s:9OysterKit11ScannerRuleO17regularExpressionyAcA5Token_p_So09NSRegularF0CSDyAA0D10AnnotationOAA0dI5ValueOGtcACmF":{"name":"regularExpression(token:regularExpression:annotations:)","abstract":"<p>Produces the specified token when the supplied regular expression is matched</p>","parent_name":"ScannerRule"},"Enums/ScannerRule.html#/s:9OysterKit11ScannerRuleO5match4with3forAA11MatchResultOAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"match(with:for:)","abstract":"<p>Performs the actual match check during parsing based on the specific case of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ParserRule.html\">ParserRule</a></code> that this instance is.</p>","parent_name":"ScannerRule"},"Enums/ScannerRule.html#/s:9OysterKit11ScannerRuleO8producesAA5Token_pvp":{"name":"produces","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Token.html\">Token</a></code> produced when the rule is matched</p>","parent_name":"ScannerRule"},"Enums/ScannerRule.html#/s:9OysterKit11ScannerRuleO11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the rule</p>","parent_name":"ScannerRule"},"Enums/ScannerRule.html#/s:9OysterKit11ScannerRuleO11annotationsSDyAA0D10AnnotationOAA0dF5ValueOGvp":{"name":"annotations","abstract":"<p>Scanner rules cannot have annotations. All scanner rules can be modelled with","parent_name":"ScannerRule"},"Enums/ScannerRule.html#/s:9OysterKit11ScannerRuleO8instance4with14andAnnotationsAA0D0_pAA5Token_pSg_SDyAA0D10AnnotationOAA0dJ5ValueOGSgtF":{"name":"instance(with:andAnnotations:)","abstract":"<p>Creates a new instance of the rule producing different tokens or with different annotations</p>","parent_name":"ScannerRule"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO5tokenyA2CmF":{"name":"token","abstract":"<p>Token to be created when the rule is matched</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO5erroryA2CmF":{"name":"error","abstract":"<p>An error to be generated when the rule is not matched</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO4voidyA2CmF":{"name":"void","abstract":"<p>Matches will be completely discarded (no node, no adoption of children by parent)</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO9transientyA2CmF":{"name":"transient","abstract":"<p>Token will not be preserved in the AST but it&rsquo;s children should be adopted by the parent node</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO6pinnedyA2CmF":{"name":"pinned","abstract":"<p>Nodes will be created for failed optional matches</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO6customyACSS_tcACmF":{"name":"custom(label:)","abstract":"<p>A custom developer defined annotation that your own AST will interpret</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO9hashValueSivp":{"name":"hashValue","abstract":"<p>The searchable hash value of the annotation</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compares two annotations for equality (not values, but keys)</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotation.html#/s:9OysterKit14RuleAnnotationO11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the annotation</p>","parent_name":"RuleAnnotation"},"Enums/RuleAnnotationValue.html#/s:9OysterKit19RuleAnnotationValueO6stringyACSScACmF":{"name":"string(_:)","abstract":"<p>A <code>String</code> value</p>","parent_name":"RuleAnnotationValue"},"Enums/RuleAnnotationValue.html#/s:9OysterKit19RuleAnnotationValueO4boolyACSbcACmF":{"name":"bool(_:)","abstract":"<p>A <code>Bool</code> value</p>","parent_name":"RuleAnnotationValue"},"Enums/RuleAnnotationValue.html#/s:9OysterKit19RuleAnnotationValueO3intyACSicACmF":{"name":"int(_:)","abstract":"<p>An <code>Int</code> value</p>","parent_name":"RuleAnnotationValue"},"Enums/RuleAnnotationValue.html#/s:9OysterKit19RuleAnnotationValueO3setyA2CmF":{"name":"set","abstract":"<p>No value, but the annotation was present</p>","parent_name":"RuleAnnotationValue"},"Enums/RuleAnnotationValue.html#/s:9OysterKit19RuleAnnotationValueO11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the annotation value</p>","parent_name":"RuleAnnotationValue"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO7successyAcA14LexicalContext_p_tcACmF":{"name":"success(context:)","abstract":"<p>The match was successful</p>","parent_name":"MatchResult"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO7consumeyAcA14LexicalContext_p_tcACmF":{"name":"consume(context:)","abstract":"<p>The match was successful but no token should be issued</p>","parent_name":"MatchResult"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO13ignoreFailureyACSS5IndexV_tcACmF":{"name":"ignoreFailure(atIndex:)","abstract":"<p>The match failed, but that failure is OK</p>","parent_name":"MatchResult"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO7failureyACSS5IndexV_tcACmF":{"name":"failure(atIndex:)","abstract":"<p>The match failed</p>","parent_name":"MatchResult"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the result</p>","parent_name":"MatchResult"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO5rangeSS5IndexVvp":{"name":"range","abstract":"<p>The substring of the source that the match was against</p>","parent_name":"MatchResult"},"Enums/MatchResult.html#/s:9OysterKit11MatchResultO13matchedStringSSSgvp":{"name":"matchedString","abstract":"<p>The substring of the source that the match was against</p>","parent_name":"MatchResult"},"Enums/TransientToken.html#/s:9OysterKit14TransientTokenO9anonymousyA2CmF":{"name":"anonymous","abstract":"<p>Just an anonymous but transient token</p>","parent_name":"TransientToken"},"Enums/TransientToken.html#/s:9OysterKit14TransientTokenO8labelledyACSScACmF":{"name":"labelled(_:)","abstract":"<p>A transient token with a name (often useful during custom AST construction)</p>","parent_name":"TransientToken"},"Enums/TransientToken.html#/s:9OysterKit14TransientTokenO8rawValueSivp":{"name":"rawValue","abstract":"<p>Always returns <code><a href=\"36f8f5912051ae747ef441d6511ca4cbGlobal Variables.html#/s:9OysterKit19transientTokenValueSivp\">transientTokenValue</a></code></p>","parent_name":"TransientToken"},"Enums/TransientToken.html#/s:9OysterKit14TransientTokenO11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the token</p>","parent_name":"TransientToken"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO16failureIgnorableSbvp":{"name":"failureIgnorable","abstract":"<p><code>true</code> if a failure to match this rule can be ignored</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO5isNotSbvp":{"name":"isNot","abstract":"<p>Returns <code>true</code> if this rule is a negation rule</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO5match4with3forAA11MatchResultOAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"match(with:for:)","abstract":"<p>Performs the actual match check during parsing based on the specific case of <code>ParserRule</code> that this instance is.</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit4RuleP8producesAA5Token_pvp":{"name":"produces","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit4RuleP8instance4with14andAnnotationsAaB_pAA5Token_pSg_SDyAA0C10AnnotationOAA0cI5ValueOGSgtF":{"name":"instance(with:andAnnotations:)","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO11annotationsSDyAA0D10AnnotationOAA0dF5ValueOGvp":{"name":"annotations","abstract":"<p>The annotations associated with the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rule.html\">Rule</a></code></p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rule.html\">Rule</a></code> almost in STLR</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO8terminalyAcA5Token_p_SSSDyAA0D10AnnotationOAA0dG5ValueOGSgtcACmF":{"name":"terminal(produces:_:_:)","abstract":"<p>Matches a terminal input sequence</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO13terminalUntilyAcA5Token_p_SSSDyAA0D10AnnotationOAA0dH5ValueOGSgtcACmF":{"name":"terminalUntil(produces:_:_:)","abstract":"<p>Captures terminals until it hits the supplied string</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO18terminalUntilOneOfyAcA5Token_p_10Foundation12CharacterSetVSDyAA0D10AnnotationOAA0dM5ValueOGSgtcACmF":{"name":"terminalUntilOneOf(produces:_:_:)","abstract":"<p>Captures terminals  until it hits a character of the supplied set</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO12terminalFromyAcA5Token_p_10Foundation12CharacterSetVSDyAA0D10AnnotationOAA0dK5ValueOGSgtcACmF":{"name":"terminalFrom(produces:_:_:)","abstract":"<p>Matches one of a character set</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO8sequenceyAcA5Token_p_SayAA0D0_pGSDyAA0D10AnnotationOAA0dG5ValueOGSgtcACmF":{"name":"sequence(produces:_:_:)","abstract":"<p>Matches a sequence of rules</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO5oneOfyAcA5Token_p_SayAA0D0_pGSDyAA0D10AnnotationOAA0dH5ValueOGSgtcACmF":{"name":"oneOf(produces:_:_:)","abstract":"<p>Matches one of a series of alternatives</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO8repeatedyAcA5Token_p_AA0D0_pSiSgAGSDyAA0D10AnnotationOAA0dG5ValueOGSgtcACmF":{"name":"repeated(produces:_:min:limit:_:)","abstract":"<p>Matches another rule with the specified bounds</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO8optionalyAcA5Token_p_AA0D0_pSDyAA0D10AnnotationOAA0dG5ValueOGSgtcACmF":{"name":"optional(produces:_:_:)","abstract":"<p>Matches 0 or 1 of the given rule</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO7consumeyAcA0D0_p_SDyAA0D10AnnotationOAA0dF5ValueOGSgtcACmF":{"name":"consume(_:_:)","abstract":"<p>Requires that the rule is matched, but the generated token will be consumed","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO9lookaheadyAcA0D0_p_SDyAA0D10AnnotationOAA0dF5ValueOGSgtcACmF":{"name":"lookahead(_:_:)","abstract":"<p>Determines if the rule would match, but produces no tokens</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO3notyAcA5Token_p_AA0D0_pSDyAA0D10AnnotationOAA0dG5ValueOGSgtcACmF":{"name":"not(produces:_:_:)","abstract":"<p>Matches if the associated <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rule.html\">Rule</a></code> does NOT match</p>","parent_name":"ParserRule"},"Enums/ParserRule.html#/s:9OysterKit10ParserRuleO6customyAcA5Token_p_SbAA15LexicalAnalyzer_pKcSSSDyAA0D10AnnotationOAA0dI5ValueOGSgtcACmF":{"name":"custom(produces:_:_:_:)","abstract":"<p>Matches using the supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit17CustomRuleClosurea\">CustomRuleClosure</a></code>. This is the recommended way of implementing custom rules as it means you do not need","parent_name":"ParserRule"},"Enums/LanguageError.html#/s:9OysterKit13LanguageErrorO08scanningD0yACSnySS5IndexVG_SStcACmF":{"name":"scanningError(at:message:)","abstract":"<p>An error in scanning (for example illegal scanning range), the index and message to be displayed. This is the lowest level of error","parent_name":"LanguageError"},"Enums/LanguageError.html#/s:9OysterKit13LanguageErrorO07parsingD0yACSnySS5IndexVG_SStcACmF":{"name":"parsingError(at:message:)","abstract":"<p>An error in parsing</p>","parent_name":"LanguageError"},"Enums/LanguageError.html#/s:9OysterKit13LanguageErrorO08semanticD0yACSnySS5IndexVG_AGSgSStcACmF":{"name":"semanticError(at:referencing:message:)","abstract":"<p>An error in the semantics of the grammar</p>","parent_name":"LanguageError"},"Enums/LanguageError.html#/s:9OysterKit13LanguageErrorO7warningyACSnySS5IndexVG_SStcACmF":{"name":"warning(at:message:)","abstract":"<p>A warning, that can be ignored</p>","parent_name":"LanguageError"},"Enums/LanguageError.html#/s:9OysterKit13LanguageErrorO5rangeSnySS5IndexVGvp":{"name":"range","abstract":"<p>The range of the error in the original source scalars</p>","parent_name":"LanguageError"},"Enums/LanguageError.html#/s:9OysterKit13LanguageErrorO7messageSSvp":{"name":"message","abstract":"<p>The human readable error message</p>","parent_name":"LanguageError"},"Enums/LanguageError.html#/s:9OysterKit13LanguageErrorO11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the error</p>","parent_name":"LanguageError"},"Enums/LanguageError.html#/s:9OysterKit13LanguageErrorO2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Determine if one error is exactly the same as another. The range and message must be <code>==</code> to each other</p>","parent_name":"LanguageError"},"Enums/Log.html#/s:9OysterKit3LogO7parsingyA2CmF":{"name":"parsing","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO8decodingyA2CmF":{"name":"decoding","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO08_parsingC0So9OS_os_logCvpZ":{"name":"_parsingLog","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO09_decodingC0So9OS_os_logCvpZ":{"name":"_decodingLog","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO07parsingC0So9OS_os_logCvpZ":{"name":"parsingLog","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO08decodingC0So9OS_os_logCvpZ":{"name":"decodingLog","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO6enableyyF":{"name":"enable()","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/Log.html#/s:9OysterKit3LogO7disableyyF":{"name":"disable()","abstract":"<p>Undocumented</p>","parent_name":"Log"},"Enums/GrammarError.html#/s:9OysterKit12GrammarErrorO34recursiveRuleDoesNotAdvanceScanneryA2CmF":{"name":"recursiveRuleDoesNotAdvanceScanner","abstract":"<p>Recursive rule references itself without advancing the scanner</p>","parent_name":"GrammarError"},"Enums/GrammarError.html#/s:9OysterKit12GrammarErrorO14notImplementedyA2CmF":{"name":"notImplemented","abstract":"<p>Some element of the implementation has not been provided</p>","parent_name":"GrammarError"},"Enums/GrammarError.html#/s:9OysterKit12GrammarErrorO23noTokenCreatedFromMatchyA2CmF":{"name":"noTokenCreatedFromMatch","abstract":"<p>A rule matched, but no token could be created</p>","parent_name":"GrammarError"},"Enums/GrammarError.html#/s:9OysterKit12GrammarErrorO11matchFailedyAcA5Token_pSg_tcACmF":{"name":"matchFailed(token:)","abstract":"<p>Whilst trying to match a token the rule failed (the text did not match). This should be expected during parsing.</p>","parent_name":"GrammarError"},"Enums/GrammarError.html#/s:9OysterKit12GrammarErrorO11descriptionSSvp":{"name":"description","abstract":"<p>A textual description of the error</p>","parent_name":"GrammarError"},"Enums/GrammarError.html":{"name":"GrammarError","abstract":"<p>An enumeration of the <code>Error</code>s that can occur during parsing.</p>"},"Enums/Log.html":{"name":"Log","abstract":"<p>Undocumented</p>"},"Enums/LanguageError.html":{"name":"LanguageError","abstract":"<p>Any error generated by the underlying parsing engine. These are generally replaced if they occur by any @error annotations.</p>"},"Enums/ParserRule.html":{"name":"ParserRule","abstract":"<p>A standard set of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rule.html\">Rule</a></code>s for parsing, including a <code>.custom</code> case where a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit17CustomRuleClosurea\">CustomRuleClosure</a></code> can be supplied and you only need to provide"},"Enums/TransientToken.html":{"name":"TransientToken","abstract":"<p>Allows easy creation of transient tokens</p>"},"Enums/MatchResult.html":{"name":"MatchResult","abstract":"<p>Match results are passed from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rule.html\">Rule</a></code>s to <code>IntermediateRepresentations</code> and provide all information required to create an AST or even begin"},"Enums/RuleAnnotationValue.html":{"name":"RuleAnnotationValue","abstract":"<p>Represents the value for a rule annotation</p>"},"Enums/RuleAnnotation.html":{"name":"RuleAnnotation","abstract":"<p>An annotation that can be associated with any rule influencing how matches are interpretted and providing additional data about the token. The following annotations represent <q>reserved words</q>, but otherwise you can define any annotations you want.</p>"},"Enums/ScannerRule.html":{"name":"ScannerRule","abstract":"<p>A set of low level rules that operate only on terminals. These are much faster than <code>ParserRules</code></p>"},"Global Variables.html#/s:9OysterKit19transientTokenValueSivp":{"name":"transientTokenValue","abstract":"<p>A constant for the integer value of a transient token</p>"},"Classes/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC7stubFor4withAcA5Token_p_SDyAA0D10AnnotationOAA0dI5ValueOGtcfc":{"name":"init(stubFor:with:)","abstract":"<p>Creates a new instance of a rule. If you use this initializer then you should subsequently (when possible) set <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC09surrogateD0AA0D0_pSgvp\">surrogateRule</a></code></p>","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC09surrogateD0AA0D0_pSgvp":{"name":"surrogateRule","abstract":"<p>The rule, which can be assigned at any point before actual parsing, to be used. When a new value is assigned to the rule a","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC5match4with3forAA11MatchResultOAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"match(with:for:)","abstract":"<p>Delegated to the the surrogate rule</p>","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC8producesAA5Token_pvp":{"name":"produces","abstract":"<p>Delegated to the the surrogate rule</p>","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC8instance4with14andAnnotationsAA0D0_pAA5Token_pSg_SDyAA0D10AnnotationOAA0dJ5ValueOGSgtF":{"name":"instance(with:andAnnotations:)","abstract":"<p>Creates a new instance with the specief token and/or anotations</p>","parent_name":"RecursiveRule"},"Classes/RecursiveRule.html#/s:9OysterKit13RecursiveRuleC11annotationsSDyAA0D10AnnotationOAA0dF5ValueOGvp":{"name":"annotations","abstract":"<p>Delegated to the the surrogate rule</p>","parent_name":"RecursiveRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC11annotationsSDyAA0D10AnnotationOAA0dF5ValueOGvp":{"name":"annotations","abstract":"<p>Annotations for the rule</p>","parent_name":"ClosureRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC9behaviourAA9BehaviourVvp":{"name":"behaviour","abstract":"<p>Behaviour for the rule</p>","parent_name":"ClosureRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC7matcheryyAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKcvp":{"name":"matcher","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit4Testa\">Test</a></code> closure used by the rule</p>","parent_name":"ClosureRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC4with3and5usingAcA9BehaviourV_SDyAA0D10AnnotationOAA0dI5ValueOGyAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKctcfc":{"name":"init(with:and:using:)","abstract":"<p>Create a an instance supplied annotations and token that will use the supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit4Testa\">Test</a></code> closure","parent_name":"ClosureRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC12instanceWith9behaviour11annotationsAcA9BehaviourVSg_SDyAA0D10AnnotationOAA0dJ5ValueOGSgtF":{"name":"instanceWith(behaviour:annotations:)","abstract":"<p>This function should create a new instance of this rule, replacing the behaviour and","parent_name":"ClosureRule"},"Classes/ClosureRule.html#/s:9OysterKit11ClosureRuleC4test4with3foryAA15LexicalAnalyzer_p_AA26IntermediateRepresentation_ptKF":{"name":"test(with:for:)","abstract":"<p>This function implements the actual test. It is responsible soley for performing","parent_name":"ClosureRule"},"Classes/StateCache.html#/s:9OysterKit10StateCacheC10memorySize7breadthACyxq_q0_GSi_Sitcfc":{"name":"init(memorySize:breadth:)","abstract":"<p>Creates a new instance of the cache</p>","parent_name":"StateCache"},"Classes/StateCache.html#/s:9OysterKit10StateCacheC8remember2at3key5valueyx_q_q0_tF":{"name":"remember(at:key:value:)","abstract":"<p>Adds new entry to the cache. This may knock out something already in the cache.</p>","parent_name":"StateCache"},"Classes/StateCache.html#/s:9OysterKit10StateCacheC6recall2at3keyq0_Sgx_q_tF":{"name":"recall(at:key:)","abstract":"<p>Retreives the cached entry with the specified key and position if any</p>","parent_name":"StateCache"},"Classes/StateCache.html#/s:9OysterKit10StateCacheC11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the cache</p>","parent_name":"StateCache"},"Classes/Parser.html#/s:9OysterKit6ParserC7grammarSayAA4Rule_pGvp":{"name":"grammar","abstract":"<p>The grammar the <code>Parser</code> should use</p>","parent_name":"Parser"},"Classes/Parser.html#/s:9OysterKit6ParserC7grammarACSayAA4Rule_pG_tcfc":{"name":"init(grammar:)","abstract":"<p>Creates a new instance of the parser with the specified rules</p>","parent_name":"Parser"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackCACyxGycfc":{"name":"init()","abstract":"<p>Creates a new instance of the stack with an active context</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC5resetyyF":{"name":"reset()","abstract":"<p>Removes all current stack entries and adds a new initial context</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC4pushyyF":{"name":"push()","abstract":"<p>Adds a new context to the top of the stack</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC3popAA0cD5EntryCyxGyF":{"name":"pop()","abstract":"<p>Removes the stack entry from the top of the stack</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC3topAA0cD5EntryCyxGSgvp":{"name":"top","abstract":"<p>The entry currently on the top of the stack, if any</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC5depthSivp":{"name":"depth","abstract":"<p>The depth of the stack</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC3allSayAA0cD5EntryCyxGGvp":{"name":"all","abstract":"<p>An inverted (from deepest to shallowest) representation of the stack</p>","parent_name":"NodeStack"},"Classes/NodeStack.html#/s:9OysterKit9NodeStackC11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the stack</p>","parent_name":"NodeStack"},"Classes/NodeStackEntry.html#/s:9OysterKit14NodeStackEntryC5nodesSayxGvp":{"name":"nodes","abstract":"<p>The child nodes of this node</p>","parent_name":"NodeStackEntry"},"Classes/NodeStackEntry.html#/s:9OysterKit14NodeStackEntryC8addError5erroryAA08LanguageG0O_tF":{"name":"addError(error:)","abstract":"<p>Adds an error to the context providing it is unique</p>","parent_name":"NodeStackEntry"},"Classes/NodeStackEntry.html#/s:9OysterKit14NodeStackEntryC9addErrorsyySayAA13LanguageErrorOGF":{"name":"addErrors(_:)","abstract":"<p>Adds all unique errors to the context providing from the supplied array</p>","parent_name":"NodeStackEntry"},"Classes/NodeStackEntry.html#/s:9OysterKit14NodeStackEntryC11flushErrorsyyF":{"name":"flushErrors()","abstract":"<p>Removes all errors</p>","parent_name":"NodeStackEntry"},"Classes/NodeStackEntry.html#/s:9OysterKit14NodeStackEntryC6errorsSayAA13LanguageErrorOGvp":{"name":"errors","abstract":"<p>The errors captured during parsing of sub-rules of this node&rsquo;s token</p>","parent_name":"NodeStackEntry"},"Classes/NodeStackEntry.html#/s:9OysterKit14NodeStackEntryC6appendyyxF":{"name":"append(_:)","abstract":"<p>Should be called when a child node is created</p>","parent_name":"NodeStackEntry"},"Classes/NodeStackEntry.html#/s:9OysterKit14NodeStackEntryC5adoptyySayxGF":{"name":"adopt(_:)","abstract":"<p>Adds all of the supplied nodes as this nodes children</p>","parent_name":"NodeStackEntry"},"Classes/NodeStackEntry.html#/s:9OysterKit14NodeStackEntryC11descriptionSSvp":{"name":"description","abstract":"<p>A human readable description of the context</p>","parent_name":"NodeStackEntry"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC7Elementa":{"name":"Element","abstract":"<p>The iterator generates elements of type <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit13StreamedTokena\">StreamedToken</a></code></p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC13parsingErrorsSays5Error_pGvp":{"name":"parsingErrors","abstract":"<p>Any errors encountered during parsing</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorCACycfc":{"name":"init()","abstract":"<p>DO NOT CALL**</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC4nextAA29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeVSgyF":{"name":"next()","abstract":"<p>Fetches the next matching token</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC17reachedEndOfInputSbvp":{"name":"reachedEndOfInput","abstract":"<p>True if parsing reached the end of input naturally (that is, encountered no errors)</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC12willEvaluate4rule2atAA11MatchResultOSgAA4Rule_p_SS5IndexVtF":{"name":"willEvaluate(rule:at:)","abstract":"<p>Increments the depth</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC12willEvaluate5token2atAA11MatchResultOSgAA0C0_p_SS5IndexVtF":{"name":"willEvaluate(token:at:)","abstract":"<p>Increments the depth</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit26IntermediateRepresentationP11didEvaluate5token11annotations11matchResultyAA5Token_p_SDyAA14RuleAnnotationOAA0lM5ValueOGAA05MatchJ0OtF":{"name":"didEvaluate(token:annotations:matchResult:)","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC11didEvaluate4rule11matchResultyAA4Rule_p_AA05MatchJ0OtF":{"name":"didEvaluate(rule:matchResult:)","abstract":"<p>Decrements the depth and generates the next token if the depth is one and the match was successful or an ignorableFailure that was pinned","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC13willBuildFrom6source4withySS_AA8Language_ptF":{"name":"willBuildFrom(source:with:)","abstract":"<p>Sets the initial depth to 1</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC8didBuildyyF":{"name":"didBuild()","abstract":"<p>Disables further evaluation</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStreamIterator.html#/s:9OysterKit19TokenStreamIteratorC10resetStateyyF":{"name":"resetState()","abstract":"<p>Disables further evaluation</p>","parent_name":"TokenStreamIterator"},"Classes/TokenStream.html#/s:9OysterKit11TokenStreamC8Iteratora":{"name":"Iterator","abstract":"<p>The iterator implementation to use</p>","parent_name":"TokenStream"},"Classes/TokenStream.html#/s:9OysterKit11TokenStreamC_5usingACSS_AA8Language_ptcfc":{"name":"init(_:using:)","abstract":"<p>Undocumented</p>","parent_name":"TokenStream"},"Classes/TokenStream.html#/s:9OysterKit11TokenStreamC_5using4withACSS_AA8Language_pxmtcAA15LexicalAnalyzerRzlufc":{"name":"init(_:using:with:)","abstract":"<p>Undocumented</p>","parent_name":"TokenStream"},"Classes/TokenStream.html#/s:ST12makeIterator0B0QzyF":{"name":"makeIterator()","parent_name":"TokenStream"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV5tokenAA5Token_pvp":{"name":"token","abstract":"<p>The token created</p>","parent_name":"IntermediateRepresentationNode"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV5rangeSnySS5IndexVGvp":{"name":"range","abstract":"<p>The range of the match in the source string</p>","parent_name":"IntermediateRepresentationNode"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV8childrenSayAEGvp":{"name":"children","abstract":"<p>Children of this node</p>","parent_name":"IntermediateRepresentationNode"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV11annotationsSDyAA14RuleAnnotationOAA0kL5ValueOGvp":{"name":"annotations","abstract":"<p>Any associated annotations made on the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV5tokenAA5Token_pvp\">token</a></code></p>","parent_name":"IntermediateRepresentationNode"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV3for2at11annotationsAeA5Token_p_SnySS5IndexVGSDyAA14RuleAnnotationOAA0oP5ValueOGtcfc":{"name":"init(for:at:annotations:)","abstract":"<p>Creates a new instance with no <code>value</code></p>","parent_name":"IntermediateRepresentationNode"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC30IntermediateRepresentationNodeV3for2at8children11annotationsAeA5Token_p_SnySS5IndexVGSayAEGSDyAA14RuleAnnotationOAA0pQ5ValueOGtcfc":{"name":"init(for:at:children:annotations:)","abstract":"<p>Creates a new instance</p>","parent_name":"IntermediateRepresentationNode"},"Classes/AbstractSyntaxTreeConstructor/ConstructionError.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC17ConstructionErrorO13parsingFailedyAESays0H0_pG_tcAEmF":{"name":"parsingFailed(causes:)","abstract":"<p>Parsing failed before the AST could be constructed</p>","parent_name":"ConstructionError"},"Classes/AbstractSyntaxTreeConstructor/ConstructionError.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC17ConstructionErrorO18constructionFailedyAESays0H0_pG_tcAEmF":{"name":"constructionFailed(causes:)","abstract":"<p>One or more AST nodes could not be constructed</p>","parent_name":"ConstructionError"},"Classes/AbstractSyntaxTreeConstructor/ConstructionError.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC17ConstructionErrorO07unknownH0yAESS_tcAEmF":{"name":"unknownError(message:)","abstract":"<p>An error that is wholly unexpected, throwers should provide as much information as possible to guide","parent_name":"ConstructionError"},"Classes/AbstractSyntaxTreeConstructor/ConstructionError.html":{"name":"ConstructionError","abstract":"<p>Errors that can occur during AST creation</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor/IntermediateRepresentationNode.html":{"name":"IntermediateRepresentationNode","abstract":"<p>An entry in the tree.</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC6errorsSays5Error_pGvp":{"name":"errors","abstract":"<p>The errors generated during parsing</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorCACycfc":{"name":"init()","abstract":"<p>Creates a new instance, preparing to parse the supplied source</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC4withACSS_tcfc":{"name":"init(with:)","abstract":"<p>Used for testing, creates a new blank instance for manipulation</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC5build_5using4fromAExxm_q_mSSAA8Language_ptKSeRzAA010DecodeablecdE0R_r0_lF":{"name":"build(_:using:from:using:)","abstract":"<p>Constructs a heterogenous AST by first constructing the specified DecodableAbstractSyntaxTree (meeting the requirements of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ParsingDecoder.html\">ParsingDecoder</a></code> class).","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC15initializeCache5depth7breadthySi_SitF":{"name":"initializeCache(depth:breadth:)","abstract":"<p>Creates a new empty cache. By default a cache is not used, but this can speed up processing of nodes where there can be","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC5build_4from5usingxxm_SSAA8Language_ptKSeRzlF":{"name":"build(_:from:using:)","abstract":"<p>Constructs a heterogenous AST by first constructing a <code>HomogenousAbstractSyntaxTree</code> which is then passed to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ParsingDecoder.html\">ParsingDecoder</a></code> to leverage","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC5build_4from5usingxxm_SSAA8Language_ptKAA0cdE0RzlF":{"name":"build(_:from:using:)","abstract":"<p>Constructs a homogenous AST from the supplied source and language. You typically do not need to use this method (where you are","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC5build_5usingAA010HomogenousE0VSS_AA8Language_ptKF":{"name":"build(_:using:)","abstract":"<p>Constructs a homogenous AST from the supplied source and language.</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC13willBuildFrom6source4withySS_AA8Language_ptF":{"name":"willBuildFrom(source:with:)","abstract":"<p>Does nothing</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC12willEvaluate4rule2atAA11MatchResultOSgAA4Rule_p_SS5IndexVtF":{"name":"willEvaluate(rule:at:)","abstract":"<p>Does nothing</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC12willEvaluate5token2atAA11MatchResultOSgAA5Token_p_SS5IndexVtF":{"name":"willEvaluate(token:at:)","abstract":"<p>Prepare for evaluation</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC11didEvaluate5token11annotations11matchResultyAA5Token_p_SDyAA14RuleAnnotationOAA0nO5ValueOGAA05MatchL0OtF":{"name":"didEvaluate(token:annotations:matchResult:)","abstract":"<p>Process the results of evalution</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC11didEvaluate4rule11matchResultyAA4Rule_p_AA05MatchK0OtF":{"name":"didEvaluate(rule:matchResult:)","abstract":"<p>Processes the results of evaluation</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC8didBuildyyF":{"name":"didBuild()","abstract":"<p>Does nothing</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC10resetStateyyF":{"name":"resetState()","abstract":"<p>Does nothing</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC5match5token11annotations7context8childrenAC30IntermediateRepresentationNodeVSgAA5Token_p_SDyAA14RuleAnnotationOAA0pQ5ValueOGAA14LexicalContext_pSayAJGtF":{"name":"match(token:annotations:context:children:)","abstract":"<p>If the token is transient <code>nil</code> is returned. Otherwise the behaviour is determined by the number of children</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC17ignoreableFailure5token11annotations5indexAC30IntermediateRepresentationNodeVSgAA5Token_p_SDyAA14RuleAnnotationOAA0pQ5ValueOGSS5IndexVtF":{"name":"ignoreableFailure(token:annotations:index:)","abstract":"<p>If the token is not transient but is pinned a node is created with a range at the current scan-head but no value. Otherwise <code>nil</code> is returned.</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/AbstractSyntaxTreeConstructor.html#/s:9OysterKit29AbstractSyntaxTreeConstructorC6failed5tokenyAA5Token_p_tF":{"name":"failed(token:)","abstract":"<p>No behaviour</p>","parent_name":"AbstractSyntaxTreeConstructor"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC6stringSSvp":{"name":"string","abstract":"<p>The string being scanned</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC12scanLocationSS5IndexVvp":{"name":"scanLocation","abstract":"<p>The current scanning index in <code>scalars</code></p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC7isAtEndSbvp":{"name":"isAtEnd","abstract":"<p><code>true</code> if the scanner is at the end of the <code>String</code></p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerCyACSScfc":{"name":"init(_:)","abstract":"<p>Create a new instance of the class.</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC11descriptionSSvp":{"name":"description","abstract":"<p>A useful description of the state of the scanner</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC8scanNexts7UnicodeO6ScalarVSgyF":{"name":"scanNext()","abstract":"<p>Advances the scan-head by one position. If it is at the end of the String it will not move (that is the scan-head will not advance past the last character in the <code>String</code>.</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC4scan17regularExpressionSbSo09NSRegularG0C_tF":{"name":"scan(regularExpression:)","abstract":"<p>Scans for the supplied regular expression. If the expression is matched the scanner location will be at the end of the match</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC4scan14charactersFromSb10Foundation12CharacterSetV_tF":{"name":"scan(charactersFrom:)","abstract":"<p>Scans all characters from the supplied set, continuing until the scanner hits a character not in the set.</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC4scan13characterFromSb10Foundation12CharacterSetV_tF":{"name":"scan(characterFrom:)","abstract":"<p>Scans a single character from the supplied set</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC8scanUpTo13characterFromSb10Foundation12CharacterSetV_tF":{"name":"scanUpTo(characterFrom:)","abstract":"<p>Advances the scan-head until a character from the supplied <code>CharacterSet</code> is found, or the end of the <code>String</code> is reached.</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC8scanUpTo6stringSbSS_tF":{"name":"scanUpTo(string:)","abstract":"<p>Advances the scan-head until a character from the supplied <code>String</code> is found, or the end of the <code>String</code> is reached.</p>","parent_name":"StringScanner"},"Classes/StringScanner.html#/s:9OysterKit13StringScannerC4scan6stringSbSS_tF":{"name":"scan(string:)","abstract":"<p>Advances the scan-head to the end of the supplied string providing it matches.</p>","parent_name":"StringScanner"},"Classes/Lexer.html#/s:9OysterKit5LexerC4skip10Foundation12CharacterSetVSgvp":{"name":"skip","abstract":"<p>If set, any characters in this set will be skipped when  <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Lexer.html#/s:9OysterKit5LexerC4markyyF\">mark()</a></code> is called</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC6sourceACSS_tcfc":{"name":"init(source:)","abstract":"<p>Creates a new instance of <code>Lexer</code> for the supplied <code>String</code>.</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC8positionSivp":{"name":"position","abstract":"<p>The integer offset of the current position in characters from the beginning of the <code>String</code> being scanned</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC5depthSivp":{"name":"depth","abstract":"<p>The current depth of the <code>Mark</code> stack used for unwinding failed rules</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC7currentSSvp":{"name":"current","abstract":"<p>The character at the current scanning position</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC4markyyF":{"name":"mark()","abstract":"<p>Mark the position of the scanner. It should be noted that at this point any characters matching <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Lexer.html#/s:9OysterKit5LexerC4skip10Foundation12CharacterSetVSgvp\">skip</a></code> will be skipped. There","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC6rewindyyF":{"name":"rewind()","abstract":"<p>Unwind the current scanning state to the previous position. Typically used when a scan for a match has failed and it is","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC7proceedAA14LexicalContext_pyF":{"name":"proceed()","abstract":"<p>Creates a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalContext.html\">LexicalContext</a></code> from the start of top mark to the current scanner position. The mark is removed from the stack","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC7consumeyyF":{"name":"consume()","abstract":"<p>Removes the top most <code>Mark</code> from the stack without creating a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalContext.html\">LexicalContext</a></code> effectively advancing the scanning position","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC10endOfInputSbvp":{"name":"endOfInput","abstract":"<p><code>true</code> if the end of the <code>String</code> being scanned has been reached</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC4scan8terminalySS_tKF":{"name":"scan(terminal:)","abstract":"<p>Scans until the specified terminal is reached in the source <code>String</code>. If the end of the <code>String</code> is reached before","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC4scan5oneOfy10Foundation12CharacterSetV_tKF":{"name":"scan(oneOf:)","abstract":"<p>Scans until one of the characters in the supplied <code>CharacterSet</code> is found. If the end of the source is reached before a","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC8scanUpTo8terminalySS_tKF":{"name":"scanUpTo(terminal:)","abstract":"<p>Scans up to (that is, the position of the scanner will be at the start of the match, not after it) the supplied <code>String</code>. If the terminal is not found","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC8scanUpTo5oneOfy10Foundation12CharacterSetV_tKF":{"name":"scanUpTo(oneOf:)","abstract":"<p>Scans up to one of the characters in the supplied <code>CharacterSet</code> is found. If the end of the source is reached before a","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC4scan17regularExpressionySo09NSRegularF0C_tKF":{"name":"scan(regularExpression:)","abstract":"<p>Scan the supplied regular expression (<code>NSRegularExpression</code>). If not found an <code>Error</code> should be the thrown. The scanner","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC8scanNextyyKF":{"name":"scanNext()","abstract":"<p>Advances the scanner one character. If the end of the source <code>String</code> has already been reached a <code>GrammarException</code> will be thrown.</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerCySSSnySS5IndexVGcip":{"name":"subscript(_:)","abstract":"<p>Returns the <code>String</code> from the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Lexer.html#/s:9OysterKit5LexerC6sourceSSvp\">source</a></code> representing the supplied range.</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC6sourceSSvp":{"name":"source","abstract":"<p>The <code>String</code> currently being scanned</p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:9OysterKit5LexerC11descriptionSSvp":{"name":"description","abstract":"<p>A description of the current state of the <code>Lexer</code></p>","parent_name":"Lexer"},"Classes/Lexer.html":{"name":"Lexer","abstract":"<p><code>Lexer</code> provides a concrete implementation of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/LexicalAnalyzer.html\">LexicalAnalyzer</a></code> protocol and is used by default for the rest of the OysterKit stack (for example"},"Classes/StringScanner.html":{"name":"StringScanner","abstract":"<p>A pure Swift implementation of a <code>String</code> scanner, that can leverage some of the strengths of swift (over using <code>NSScanner</code>). In general consumers of"},"Classes/AbstractSyntaxTreeConstructor.html":{"name":"AbstractSyntaxTreeConstructor","abstract":"<p>AbstractSyntaxTreeConstructor is an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IntermediateRepresentation.html\">IntermediateRepresentation</a></code> responsible for briding between the parsing results and an AbstractSyntaxTree."},"Classes/TokenStream.html":{"name":"TokenStream","abstract":"<p>A <code>TokenStream</code> provides lazy iterators that minimize memory consumption and overhead allowing you to iterate through the tokens created by the"},"Classes/TokenStreamIterator.html":{"name":"TokenStreamIterator","abstract":"<p>The Iterator created by token streams</p>"},"Classes/NodeStackEntry.html":{"name":"NodeStackEntry","abstract":"<p><code>NodeStackEntry</code>&lsquo;s are used to capture parsing context (for example child-nodes and errors) ASTs are constructed.</p>"},"Classes/NodeStack.html":{"name":"NodeStack","abstract":"<p>A <code>NodeStack</code> can be used to manage AST construction state, as new rule evaluations begin new contexts can be pushed onto the node stack and then popped and discarded on failure, or popped and acted on for success.</p>"},"Classes/Parser.html":{"name":"Parser","abstract":"<p>A default implementation of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Language.html\">Language</a></code>. AST construction is automatically provided by standard extensions to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Language.html\">Language</a></code></p>"},"Classes/StateCache.html":{"name":"StateCache","abstract":"<p>A generic cache that can be used in your own <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/IntermediateRepresentation.html\">IntermediateRepresentation</a></code></p>"},"Classes/ClosureRule.html":{"name":"ClosureRule","abstract":"<p>An implementation of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Rule.html\">Rule</a></code> that allows the specification of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:9OysterKit4Testa\">Test</a></code>"},"Classes/RecursiveRule.html":{"name":"RecursiveRule","abstract":"<p>When a rule definition calls itself whilst evaluating itself (left hand recursion) you cannot create the rule directly as it will become caught in an infinite look (creating instances of itself, which create instances of itself etc until the stack is empty).  To avoid this a rule can use this wrapper to manage lazy initialization of itself. The recursive rule enables a reference to be added on the RHS, but the actual rule will not be initiialized until later, and this wrapper will then call that lazily initalized rule.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}
